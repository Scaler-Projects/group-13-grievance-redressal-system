# Admin Management System API
openapi: 3.0.3
info:
  title: Swagger Admin Management Service - OpenAPI 3.0
  description: |-
    This is a sample for Admin Management Service APIs based on the OpenAPI 3.0 specification.
    This has various APIs to perform CRUD operations for the Admin User Type as well as assign/fetch the grievance for a user by the admin.

  version: 1.0.11
servers:
  - url: https://localhost:8080/api/v1
tags:
  - name: Admin
    description: CRUD operations on Admin
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: Grievance
    description: Fetch and assign grievance to the users
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /admin:
    get:
      tags:
        - Admin
      summary: Get an admin details
      description: Get an admin details by UserId
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The user ID
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
            application/xml:
              schema:
                $ref: '#/components/schemas/Admin'
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
        '405':
          description: Validation exception
    post:
      tags:
        - Admin
      summary: Create a new admin user
      description: Create a new admin user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
          application/xml:
            schema:
              $ref: '#/components/schemas/Admin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Admin'
          text/plain:
            schema:
              type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
            application/xml:
              schema:
                $ref: '#/components/schemas/Admin'
        '400':
          description: Invalid details supplied
        '405':
          description: Validation exception
    put:
      tags:
        - Admin
      summary: Update details of an admin user
      description: Update details of an admin user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
          application/xml:
            schema:
              $ref: '#/components/schemas/Admin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Admin'
          text/plain:
            schema:
              type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
            application/xml:
              schema:
                $ref: '#/components/schemas/Admin'
        '400':
          description: Invalid details supplied
        '405':
          description: Validation exception
    delete:
      tags:
        - Admin
      summary: Delete an admin details
      description: Delete an admin details by UserId
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The user ID
      responses:
        '204':
          description: The resource was deleted successfully.
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
        '405':
          description: Validation exception



components:
  schemas:
    Admin:
      type: object
      properties:
        userid:
          type: integer
          format: int64
          example: 1
        username:
          type: string
          example: Kashish
        password:
          type: string
          example: password
        email:
          type: string
          example: kashishsingh355@gmail.com
        phone:
          type: string
          example: 9922345623
        timeCreated:
          type: string
          format: date-time
        timeUpdated:
          type: string
          format: date-time
      xml:
        name: admin
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    Admin:
      description: Admin user details
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Admin'
        application/xml:
          schema:
            $ref: '#/components/schemas/Admin'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Admin'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header