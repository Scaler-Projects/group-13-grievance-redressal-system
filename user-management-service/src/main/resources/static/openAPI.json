{
  "openapi": "3.0.0",
  "info": {
    "title": "User Management Service",
    "description": "This service is one of 5 services available in Grievance Redressal System. The User Management service API is designed to facilitate the management of user data within the Grievance Redressal System. It allows you to create, retrieve, update, and delete user records. This API provides seamless access to user-related functionalities, making user management efficient and straightforward.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:4444/api/users"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "summary": "Retrieve all users",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": 1,
                    "username": "john_doe",
                    "password": "password123",
                    "email": "john@example.com"
                  },
                  {
                    "id": 2,
                    "username": "jane_smith",
                    "password": "pass123",
                    "email": "jane@example.com"
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "requestBody": {
          "description": "User data",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "username": "john_doe",
                "password": "password123",
                "email": "john@example.com"
              },
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Retrieve a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": {
                  "id": 2,
                  "username": "jane_smith",
                  "password": "pass123",
                  "email": "jane@example.com"
                },
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "User data",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                  "id": 2,
                  "username": "jane_smith",
                  "password": "pass123",
                  "email": "jane@xyz.com"
              },
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated"
          },
          "400": {
            "description": "Bad Request, something went wrong"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted, 204 No Content to return"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
            "password": {
                "type": "string"
            },
          "email": {
            "type": "string"
          }
        }
      }
    }
  }
}
